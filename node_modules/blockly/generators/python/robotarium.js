/**
 * @license
 * Copyright 2012 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @fileoverview Generating Python for variable blocks.
 * @author q.neutron@gmail.com (Quynh Neutron)
 */
 'use strict';


 

//This block creates a new robot
Blockly.Python['new_robot'] = function(block) {
  var text_name = block.getFieldValue('name');
  var number_x_val = block.getFieldValue('x_val');
  var number_y_val = block.getFieldValue('y_val');
  var angle_theta = block.getFieldValue('theta');
  var robot_color = Blockly.Python.valueToCode(block, 'color', Blockly.Python.ORDER_ATOMIC);
  if (robot_color == '') robot_color = '"black"';
   var code = `
curName = "`+text_name+`"
drawing = -1
New_Robot(curName,`+number_x_val+`,`+number_y_val+`,`+angle_theta+`,`+robot_color+`,drawing)
`;
   return code;
 };

//This block runs the robot to a point and angle
Blockly.Python['run_to_point_and_angle'] = function(block) {
   var number_target_x = block.getFieldValue('target_x');
   var number_target_y = block.getFieldValue('target_y');
   var angle = block.getFieldValue('angle');   
   var code = "Add_Target_Point(curName,"+number_target_x+","+number_target_y+","+angle+",drawing)\n";
   return code;
 };

//This block runs the robot to a point and angle
Blockly.Python['run_to_point'] = function(block) {
  var number_target_x = block.getFieldValue('target_x');
  var number_target_y = block.getFieldValue('target_y');
  var code = "Add_Target_Point(curName,"+number_target_x+","+number_target_y+",0,drawing)\n";
  return code;
};

//This block puts the robots "pen" down
Blockly.Python['pen_down'] = function(block) {
  var color = Blockly.Python.valueToCode(block, 'color', Blockly.Python.ORDER_ATOMIC);
  if (color == "") color = "'#000000'";
  color = color.slice(2,-1);
  color = parseInt(color,16);
  var code = `
drawing = `+color+`
`;
  return code;
};

//This block pulls the robots "pen" up
Blockly.Python['pen_up'] = function(block) {
  var code = "drawing = -1\n";
  return code;
}

//This block changes the drawing type between actual or initial
Blockly.Python['drawing_type'] = function(block) {
  var dropdown_d_type = block.getFieldValue('D_type');
  var code = "drawingType = \""+dropdown_d_type+"\"\n";
  return code;
};

//This block makes the robot turn by heading
Blockly.Python['turn_by_angle'] = function(block) {
  var angle_angle = block.getFieldValue('angle');
  var code = "robotList[namesList.index(curName)].turn("+angle_angle+",drawing)\n";
  return code;
};

//This block makes the robot move forward by distance
Blockly.Python['move_forward'] = function(block) {
  var number_distance = block.getFieldValue('distance');
  var code = "robotList[namesList.index(curName)].move_Forward("+number_distance+",drawing)\n";
  return code;
};

//This block places an image
Blockly.Python['display_image'] = function(block) {
  var text_link = block.getFieldValue('link');
  var number_x = block.getFieldValue('x');
  var number_y = block.getFieldValue('y');
  var number_w = block.getFieldValue('w');
  var number_h = block.getFieldValue('h');
  var code = `
  
  `;
  return code;
};

//This block turns to a spicific heading
Blockly.Python['turn_to'] = function(block) {
  var angle_angle = block.getFieldValue('angle');
  var code = "robotList[namesList.index(curName)].turn_To("+angle_angle+",drawing)\n";
  return code;
};