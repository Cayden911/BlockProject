/**
 * @license
 * Copyright 2012 Google LLC
 * SPDX-License-Identifier: Apache-2.0
 */

/**
 * @fileoverview Generating Python for variable blocks.
 * @author q.neutron@gmail.com (Quynh Neutron)
 */
 'use strict';

// Ititialize sets up the Robotarium Libraties and imports all of  the required files



 
//adds a new robot to the array of Robots

 Blockly.Python['new_robot'] = function(block) {
  var text_name = block.getFieldValue('name');
  var number_x_val = block.getFieldValue('x_val');
  var number_y_val = block.getFieldValue('y_val');
  var angle_theta = block.getFieldValue('theta');
  var robot_color = Blockly.Python.valueToCode(block, 'color', Blockly.Python.ORDER_ATOMIC);
   var code = `
curName = "`+text_name+`"
New_Robot(curName,`+number_x_val+`,`+number_y_val+`,`+angle_theta+`,`+robot_color+`)
`;
   return code;
 };

 Blockly.Python['run_to_point'] = function(block) {
   var number_target_x = block.getFieldValue('target_x');
   var number_target_y = block.getFieldValue('target_y');
   var code = `
Add_Target_Point(curName,`+number_target_x+`,`+number_target_y+`,0)
`;
   return code;
 };

 Blockly.Python['display_image'] = function(block) {
  var value_image_name = block.getFieldValue('image name');
  // TODO: Assemble Python into code variable.
  var code = `gt_img = plt.imread("`+ String(value_image_name) +`.png")
x_img = np.linspace(-1.0, 1.0, gt_img.shape[1])
y_img = np.linspace(-1.0, 1.0, gt_img.shape[0])
gt_img_handle = r.axes.imshow(gt_img, extent=(-1, 1, -1, 1))
`;
  return code;
 };

Blockly.Python['pen_down'] = function(block) {
  // TODO: Assemble Python into code variable.
  var text_name = block.getFieldValue('name');
  var color = block.getFieldValue('color');
  var code = color;
  return code;
};

//Drives the robot to a point at a specified angle
Blockly.Python['run_to_point_and_angle'] = function(block) {
  var number_target_x = block.getFieldValue('target_x');
  var number_target_y = block.getFieldValue('target_y');
  var angle_angle = block.getFieldValue('angle');
  var code =`
Add_Target_Point(curName,`+number_target_x+`,`+number_target_y+`,`+angle_angle+`)
`;
  return code;
};

Blockly.Python['drawing_type'] = function(block) {
  var dropdown_d_type = block.getFieldValue('D_type');
  var code = '...\n';
  return code;
};

Blockly.Python['turn_by_angle'] = function(block) {
  var angle_angle = block.getFieldValue('angle');
  var code = `
robotList[namesList.index(curName)].turn(`+angle_angle+`)
`;
  return code;
};

Blockly.Python['move_forward'] = function(block) {
  var number_distance = block.getFieldValue('distance');
  var code = `
robotList[namesList.index(curName)].move_Forward(`+number_distance+`)
`;
  return code;
};

Blockly.Python['turn_to'] = function(block) {
  var angle_angle = block.getFieldValue('angle');
  var code = `
robotList[namesList.index(curName)].turn_To(`+angle_angle+`)
`;
  return code;
};